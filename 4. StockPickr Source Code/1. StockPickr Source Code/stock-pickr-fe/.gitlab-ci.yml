stages:
    - build
    - publish
    - deploy

variables:
    JOB_IMAGE_NAME_DEV: $CI_REGISTRY_IMAGE:dev
    JOB_IMAGE_NAME_PROD: $CI_REGISTRY_IMAGE/prod:$CI_COMMIT_SHORT_SHA

build-dev:
    stage: build
    script:
        - docker build -t $JOB_IMAGE_NAME_DEV -f ./docker/Dockerfile.dev .
    tags:
        - do-runner

build-prod:
    stage: build
    script:
        - docker build -t $JOB_IMAGE_NAME_PROD --target=server --build-arg PROD_API_URL=$SP_PROD_API_URL -f ./docker/Dockerfile.prod .
    tags:
        - do-runner

push-dev:
    stage: publish
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker push $JOB_IMAGE_NAME_DEV
    tags:
        - do-runner

push-prod:
    stage: publish
    before_script:
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    script:
        - docker push $JOB_IMAGE_NAME_PROD
    tags:
        - do-runner

deploy-prod:
    stage: deploy
    script:
        - curl "https://gitlab.com/api/v4/projects/24430614/repository/files/bin%2Fcommon%2Fservers.py/raw?ref=master&private_token=$SP_GITLAB_ACCESS_TOKEN" > servers.py
        - curl "https://gitlab.com/api/v4/projects/24430614/repository/files/bin%2Fcommon%2Ffunctions.py/raw?ref=master&private_token=$SP_GITLAB_ACCESS_TOKEN" > functions.py
        - curl "https://gitlab.com/api/v4/projects/24430614/repository/files/bin%2Frestart-service%2Frestart-service-on-all-server.py/raw?ref=master&private_token=$SP_GITLAB_ACCESS_TOKEN" > restart-service-on-all-server.py
        - python3 restart-service-on-all-server.py fe $JOB_IMAGE_NAME_PROD
        - rm servers.py functions.py restart-service-on-all-server.py
    tags:
        - do-runner
    when: manual
    allow_failure: true
